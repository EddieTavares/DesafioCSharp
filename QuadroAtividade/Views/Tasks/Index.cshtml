@model IEnumerable<QuadroAtividade.Models.Task>

@{
    /**/

    ViewBag.Title = "Index";
}

@using (Html.BeginForm("AtualizaStatus", "Tasks"))
{
    @Html.AntiForgeryToken()
}

@using (Html.BeginForm("ExcluiTask", "Tasks"))
{
    @Html.AntiForgeryToken()
}


<h2>Quadro de atividades</h2>

<p>
    @Html.ActionLink(" Cadastrar", "Create", null, new { @class = "btn btn-info glyphicon glyphicon-plus" })
</p>

<div id="board">
    <div id="001" class="section">
        <h1>A fazer</h1>

        @foreach (var item in Model)
        {
            if (item.Status == 1)
            {

                <div id="@item.TaskId" class="card">

                    <h3> <u> @item.Titulo </u></h3>
                    <p>@item.Descricao</p>

                    <h4>Id: @item.TaskId</h4>
                    <h4>Criação: @item.DataCriacao.ToString("dd/MM/yyyy")</h4>


                    @if (item.DataEdicao.ToString("dd/MM/yyyy") != "31/12/9999")
                    {
                        <h4> Atualização: @item.DataEdicao.ToString("dd/MM/yyyy")</h4>
                    }

                    <button class="btn btn-warning glyphicon glyphicon-edit" title="Editar" type="button" onclick="location.href='@Url.Action("Edit", "Tasks", new { id = item.TaskId })';return false;" style="margin-bottom : 2%; margin-top : 2%"></button>

                    @using (Html.BeginForm("Delete", "Tasks", new { id = item.TaskId }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.CustomBtnConfirmation("", "Confirmar ação", "Deseja solicitar a Prorrogação do titulo  ?", new { @class = "btn btn-danger glyphicon glyphicon-trash", @style = "margin-bottom : 2%; margin-top : 2%" })
                    }

                </div>
            }
        }


    </div>
    <div id="002" class="section">
        <h1>Em andamento</h1>

        @foreach (var item in Model)
        {
            if (item.Status == 2)
            {
                <div id="@item.TaskId" class="card">

                    <h3> <u> @item.Titulo </u></h3>
                    <p>@item.Descricao</p>

                    <h4>Id: @item.TaskId</h4>
                    <h4>Criação: @item.DataCriacao.ToString("dd/MM/yyyy")</h4>


                    @if (item.DataEdicao.ToString("dd/MM/yyyy") != "31/12/9999")
                    {
                        <h4> Atualização: @item.DataEdicao.ToString("dd/MM/yyyy")</h4>
                    }

                    <button class="btn btn-warning glyphicon glyphicon-edit" title="Editar" type="button" onclick="location.href='@Url.Action("Edit", "Tasks", new { id = item.TaskId })';return false;" style="margin-bottom : 2%; margin-top : 2%"></button>

                    @using (Html.BeginForm("Delete", "Tasks", new { id = item.TaskId }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.CustomBtnConfirmation("", "Confirmar ação", "Deseja solicitar a Prorrogação do titulo  ?", new { @class = "btn btn-danger glyphicon glyphicon-trash", @style = "margin-bottom : 2%; margin-top : 2%" })
                    }

                </div>
            }
        }

    </div>
    <div id="003" class="section">
        <h1>Concluídas</h1>

        @foreach (var item in Model)
        {
            if (item.Status == 3)
            {
                <div id="@item.TaskId" class="card">

                    <h3> <u> @item.Titulo </u></h3>
                    <p>@item.Descricao</p>

                    <h4>Id: @item.TaskId</h4>
                    <h4>Criação: @item.DataCriacao.ToString("dd/MM/yyyy")</h4>


                    @if (item.DataEdicao.ToString("dd/MM/yyyy") != "31/12/9999")
                    {
                        <h4> Atualização: @item.DataEdicao.ToString("dd/MM/yyyy")</h4>
                    }

                    <button class="btn btn-warning glyphicon glyphicon-edit" title="Editar" type="button" onclick="location.href='@Url.Action("Edit", "Tasks", new { id = item.TaskId })';return false;" style="margin-bottom : 2%; margin-top : 2%"></button>

                    @using (Html.BeginForm("Delete", "Tasks", new { id = item.TaskId }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.CustomBtnConfirmation("", "Confirmar ação", "Deseja solicitar a Prorrogação do titulo  ?", new { @class = "btn btn-danger glyphicon glyphicon-trash", @style = "margin-bottom : 2%; margin-top : 2%" })
                    }

                </div>
            }
        }

    </div>
</div>


@section Scripts {
    <script>

        var cards = document.querySelectorAll('.card');

        for (var i = 0, n = cards.length; i < n; i++) {
            var card = cards[i];
            card.draggable = true;
        };

        var board = document.getElementById('board');

        var hideMe;

        board.onselectstart = function (e) {
            e.preventDefault();
        }

        board.ondragstart = function (e) {
            console.log('dragstart');
            hideMe = e.target;
            e.dataTransfer.setData('card', e.target.id);
            e.dataTransfer.effectAllowed = 'move';
        };

        board.ondragend = function (e) {
            e.target.style.visibility = 'visible';
        };

        var lastEneterd;

        board.ondragenter = function (e) {
            console.log('dragenter');
            if (hideMe) {
                hideMe.style.visibility = 'hidden';
                hideMe = null;
            }
            // Save this to check in dragleave.
            lastEntered = e.target;
            var section = closestWithClass(e.target, 'section');
            // TODO: Check that it's not the original section.
            if (section) {
                section.classList.add('droppable');
                e.preventDefault(); // Not sure if these needs to be here. Maybe for IE?
                return false;
            }
        };

        board.ondragover = function (e) {
            // TODO: Check data type.
            // TODO: Check that it's not the original section.
            if (closestWithClass(e.target, 'section')) {
                e.preventDefault();
            }
        };

        board.ondragleave = function (e) {
            // FF is raising this event on text nodes so only check elements.
            if (e.target.nodeType === 1) {
                // dragleave for outer elements can trigger after dragenter for inner elements
                // so make sure we're really leaving by checking what we just entered.
                // relatedTarget is missing in WebKit: https://bugs.webkit.org/show_bug.cgi?id=66547
                var section = closestWithClass(e.target, 'section');
                if (section && !section.contains(lastEntered)) {
                    section.classList.remove('droppable');
                }
            }
            lastEntered = null; // No need to keep this around.
        };

        board.ondrop = function (e) {
            var section = closestWithClass(e.target, 'section');
            var id = e.dataTransfer.getData('card');

            if (id) {
                var card = document.getElementById(id);
                // Might be a card from another window.
                if (card) {
                    if (section !== card.parentNode) {
                        section.appendChild(card);
                        AtualizaStatus(id, section.id);
                    }
                } else {
                    alert('couldn\'t find card #' + id);
                }
            }

            section.classList.remove('droppable');
            e.preventDefault();
        };

        function closestWithClass(target, className) {
            while (target) {
                if (target.nodeType === 1 &&
                    target.classList.contains(className)) {
                    return target;
                }
                target = target.parentNode;
            }
            return null;
        }

        function AtualizaStatus(TaskId, SessionId) {

            debugger;

            var token = $('input[name="__RequestVerificationToken"]').val();
            var tokenadr = $('form[action="' + baseUrl + 'Tasks/AtualizaStatus"] input[name="__RequestVerificationToken"]').val();
            var headersadr = {};
            headersadr['__RequestVerificationToken'] = tokenadr;
            var url = baseUrl + "Tasks/AtualizaStatus";

            var Status = 0;

            if (SessionId === '001') {
                Status = 1;
            } else if (SessionId === '002') {
                Status = 2;
            } else if (SessionId === '003') {
                Status = 3;
            }

            $.ajax({
                url: url
                , type: "POST"
                , datatype: "json"
                , headers: headersadr
                , data:
                {
                    TaskId: TaskId,
                    Status: Status,
                    __RequestVerificationToken: token
                }
                , success: function (data) {
                    // CarregaPartialFotos();
                },
                error: function (erro) {
                    console.debug(erro);
                }
            });
        }


        // Excluir imagem
        function ExcluiTask(TaskId) {

            var token = $('input[name="__RequestVerificationToken"]').val();
            var tokenadr = $('form[action="' + baseUrl + 'Tasks/ExcluiTask"] input[name="__RequestVerificationToken"]').val();
            var headersadr = {};
            headersadr['__RequestVerificationToken'] = tokenadr;
            var url = baseUrl + "Tasks/ExcluiTask";

            $.ajax({
                url: url
                , type: "POST"
                , datatype: "json"
                , headers: headersadr
                , data:
                {
                    TaskId: TaskId,
                    __RequestVerificationToken: token
                }
                , success: function (data) {
                    CarregaPartialFotos();
                },
                error: function (erro) {
                    console.debug(erro);
                }
            });
        }


    </script>
}
